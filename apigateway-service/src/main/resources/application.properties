#spring.application.name=apigateway-service
#eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka
#
#server.port=9000
#
#spring.main.allow-bean-definition-overriding=true
#logging.level.org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping=TRACE
#logging.level.org.springframework.cloud.gateway= TRACE
#logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
#logging.level.reactor.netty.http.client=DEBUG
#
## product service
#
#spring.cloud.gateway.routes[0].id=product-service
#spring.cloud.gateway.routes[0].uri=lb://product-service
#spring.cloud.gateway.routes[0].predicates[0]=Path=/api/product/**
#
## inventory service
#
#spring.cloud.gateway.routes[1].id=inventory-service
#spring.cloud.gateway.routes[1].uri=lb://inventory-service
#spring.cloud.gateway.routes[1].predicates[0]=Path=/api/inventory/**
#
## order service
#
#spring.cloud.gateway.routes[2].id=order-service
#spring.cloud.gateway.routes[2].uri=lb://order-service
#spring.cloud.gateway.routes[2].predicates[0]=Path=/api/order
#spring.cloud.gateway.routes[2].predicates[1]=Path=/api/order/**
#
## actuator
#
#management.port=9000
#management.endpoints.web.exposure.include= prometheus
#
## zipkin
#
#management.zipkin.tracing.endpoint=http://zipkin:9411
#management.tracing.sampling.probability=1.0
#--------------------------------------------------------------------------------------------------------

spring.application.name=apigateway-service
server.port=9000

# Logging
logging.level.org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping=TRACE
logging.level.org.springframework.cloud.gateway=TRACE
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.level.reactor.netty.http.client=DEBUG

# Product Service Routes (product, category, and review)
spring.cloud.gateway.routes[0].id=productservice
spring.cloud.gateway.routes[0].uri=http://localhost:8085
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/products
spring.cloud.gateway.routes[0].predicates[1]=Path=/api/products/**

# Review Service Routes
spring.cloud.gateway.routes[1].id=review-service
spring.cloud.gateway.routes[1].uri=http://localhost:8085
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/reviews
spring.cloud.gateway.routes[1].predicates[1]=Path=/api/reviews/**

# Category Service Routes
spring.cloud.gateway.routes[2].id=category-service
spring.cloud.gateway.routes[2].uri=http://localhost:8085
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/categories
spring.cloud.gateway.routes[2].predicates[1]=Path=/api/categories/**

# Inventory Service Routes
spring.cloud.gateway.routes[3].id=inventoryservice
spring.cloud.gateway.routes[3].uri=http://localhost:8082
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/inventory
spring.cloud.gateway.routes[3].predicates[1]=Path=/api/inventory/**

# Order Service Routes
spring.cloud.gateway.routes[4].id=order-service
spring.cloud.gateway.routes[4].uri=http://localhost:8083
spring.cloud.gateway.routes[4].predicates[0]=Path=/order
spring.cloud.gateway.routes[4].predicates[1]=Path=/order/**

# Payment Service Routes (combined payment and pay)
spring.cloud.gateway.routes[5].id=payment-gateway-service
spring.cloud.gateway.routes[5].uri=http://localhost:8082
spring.cloud.gateway.routes[5].predicates[0]=Path=/payment
spring.cloud.gateway.routes[5].predicates[1]=Path=/payment/**

# Payment Service Routes (combined payment and pay)
spring.cloud.gateway.routes[7].id=cart-service
spring.cloud.gateway.routes[7].uri=http://localhost:8086
spring.cloud.gateway.routes[7].predicates[0]=Path=/api/cart
spring.cloud.gateway.routes[7].predicates[1]=Path=/api/cart/**

spring.cloud.gateway.routes[6].id=pay-service
spring.cloud.gateway.routes[6].uri=http://localhost:8089
spring.cloud.gateway.routes[6].predicates[0]=Path=/pay
spring.cloud.gateway.routes[6].predicates[1]=Path=/pay/**

# Actuator
management.port=9000
management.endpoints.web.exposure.include=prometheus

# Zipkin
management.zipkin.tracing.endpoint=http://zipkin:9411
management.tracing.sampling.probability=1.0

# Enable CORS for all routes
spring.cloud.gateway.globalcors.cors-configurations[/].allowedOrigins=*
spring.cloud.gateway.globalcors.cors-configurations[/].allowedMethods=GET,POST,PUT,DELETE
spring.cloud.gateway.globalcors.cors-configurations[/].allowedHeaders=*

